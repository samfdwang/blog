<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mathjax on Academic</title>
    <link>https://fudong.netlify.com/tags/mathjax/</link>
    <description>Recent content in Mathjax on Academic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Your Name</copyright>
    <lastBuildDate>Fri, 11 Aug 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/mathjax/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Markdown test for myself</title>
      <link>https://fudong.netlify.com/post/2017-08-11-my-first-post/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fudong.netlify.com/post/2017-08-11-my-first-post/</guid>
      <description>&lt;p&gt;Hello World!
(This is a word of magic.~.~)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Riemann-Hilbert Problem Introduction</title>
      <link>https://fudong.netlify.com/post/riemman-hilbert_problem/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fudong.netlify.com/post/riemman-hilbert_problem/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;h1 id=&#34;plemelj-formula&#34;&gt;Plemelj Formula&lt;/h1&gt;

&lt;h1 id=&#34;cauchy-type-integral&#34;&gt;Cauchy Type Integral&lt;/h1&gt;

&lt;h1 id=&#34;scalar-riemann-hilbert-problem&#34;&gt;Scalar Riemann-Hilbert Problem&lt;/h1&gt;

&lt;h2 id=&#34;fundamental-knowledge&#34;&gt;Fundamental Knowledge&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$w=u(x,y)+iv(x,y)$&lt;/code&gt; maps point in &lt;code&gt;$z-plane$&lt;/code&gt; to &lt;code&gt;$w-plane$&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;closed-contour-case&#34;&gt;Closed contour case&lt;/h2&gt;

&lt;p&gt;Given a closed contour &lt;code&gt;$C$&lt;/code&gt; and a function &lt;code&gt;$g(t)\neq 0$&lt;/code&gt; defined on
&lt;code&gt;$C$&lt;/code&gt;,which satisfies Hölder condition, find a sectionally analytic
function &lt;code&gt;$\Phi(z)$&lt;/code&gt; such that
$$
\label{BV}\tag{1}
\Phi^+(t)=g(t)\Phi^-(t),t\in C
$$
where
&lt;code&gt;$\Phi^{\pm}(z)\in H(D^{\pm})$&lt;/code&gt;,&lt;code&gt;$D^+$&lt;/code&gt; and &lt;code&gt;$D^-$&lt;/code&gt; are inside and outside of
contour &lt;code&gt;$C$&lt;/code&gt; respectively. The equation (\ref{BV}) is also called boundary
value of the Riemann-Hilbert problem.&lt;/p&gt;

&lt;p&gt;Here gives the solution to the Riemann-Hilbert problem:
$$\label{GS}\tag{2}
\Phi(z)=X(z)P(z)$$
where &lt;code&gt;$X(z)$&lt;/code&gt; called fundamental solution to the RHP
has the following form:
&lt;code&gt;$$X(z)=\begin{cases}
e^{\Gamma(z)},z\in D^+ \\
z^{-k}e^{\Gamma(z)},z\in D^-
\end{cases}$$&lt;/code&gt;
$$\Gamma(z):=\frac{1}{2\pi i}\int _C\frac{\log(\tau^{-k}g(\tau)\text{d}\tau}{\tau-z}$$&lt;/p&gt;

&lt;p&gt;where &lt;code&gt;$k=\text{ind}\,g(t)$&lt;/code&gt;, the index of &lt;code&gt;$g(t)$&lt;/code&gt; with respect to contour
&lt;code&gt;$C$&lt;/code&gt;.. The general solution (\ref{GS}) is derived from the fundamental
solution multiple by a polynomial with degree no less than 0. The basis
idea to obtain the fundamental solution is applying Plemelj formula,
which is:
&lt;code&gt;$$\Phi^+(t)-\Phi^-(t) =\phi(t) \label{pfa} \tag{3}$$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$$\Phi^+(t)+\Phi^-(t) =\frac{1}{\pi i}\int_{C}\frac{\phi(\tau)\text{d}\tau}{\tau-t}\\$$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;where &lt;code&gt;$t$&lt;/code&gt; is on the contour.&lt;/p&gt;

&lt;p&gt;In fact, using logarithm to transfer multiple to difference will finally
arrived at equation in form of (\ref{pfa}), more details seen the Textbook.&lt;/p&gt;

&lt;p&gt;Next the inhomogeneous RHP will be considered, which providing the same
conditions as homogeneous RHP except for boundary value, the
inhomogeneous RHP satisfies: &lt;code&gt;$$\label{iRHP}\tag{4}
\Phi^+(t)=g(t)\Phi^-(t)+f(t),t\in C$$&lt;/code&gt; and &lt;code&gt;$f(t)$&lt;/code&gt; satisfies Hölder
condition.&lt;/p&gt;

&lt;p&gt;To solve this problem, first we need solve the homogeneous part, using
the method given for homogeneous RHP, as a result we will get the
fundamental solution &lt;code&gt;$X(z)$&lt;/code&gt; such that &lt;code&gt;$X^+(t)=g(t)X^-(t)$&lt;/code&gt;, substitute
&lt;code&gt;$g(t)$&lt;/code&gt; by &lt;code&gt;$\frac{X^+(t)}{X^-(t)}$&lt;/code&gt; to equation \ref{iRHP}, we will get:
$$\frac{\Phi^+(t)}{X^+(t)}-\frac{\Phi^-(t)}{X^-(t)}=\frac{f(t)}{X^+(t)}$$
Using Plemelj formula, we have :
$$\Phi^{\pm}(z)=\frac{X^{\pm}(z)}{2\pi i}\int_C\frac{f(\tau)\text{d}\tau}{X^+(\tau)(\tau-z)}$$&lt;/p&gt;

&lt;p&gt;Hence in general, the inhomogeneous RHP has solution of the following
form:
$$\Phi(z)=X(z)(P(z)+\Psi(z)),\Psi(z)=\frac{1}{2\pi i}\int_C\frac{f(\tau)\text{d}\tau}{X^+(\tau)(\tau-z)}$$&lt;/p&gt;

&lt;h2 id=&#34;open-contour-case&#34;&gt;Open contour case&lt;/h2&gt;

&lt;p&gt;Using the limiting of the Cauchy type integral in the end of the open
contour.&lt;/p&gt;

&lt;h2 id=&#34;application-to-singular-integral-equations&#34;&gt;Application to singular integral equations&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Solving singular integral equation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hilbert problem&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Abel integral problem&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Integral equation with logarithm kernel&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;examples&#34;&gt;Examples&lt;/h1&gt;

&lt;h2 id=&#34;riemann-hilbert-problem-in-solving-kdv&#34;&gt;Riemann-Hilbert Problem in solving KdV&lt;/h2&gt;

&lt;p&gt;In this section, we consider the Korteweg-de Vries (KdV) equation:
&lt;code&gt;$$u_t+6uu_x+u_{xxx}=0$$&lt;/code&gt; Take KdV equation as an example to illustrate
inverse scattering transform (IST) and how the Riemann-Hilbert problem
works in IST. Let’s first begin with the time dependent Schrödinger
Equation: &lt;code&gt;$$\label{sp1}\tag{5}
\mathcal{L}\psi=\lambda \psi$$&lt;/code&gt; where
&lt;code&gt;$\mathcal{L}=\frac{\text{d}^2}{\text{d}x^2}+q(x)$&lt;/code&gt; is called Schrödinger
operator with potential &lt;code&gt;$q(x)$&lt;/code&gt;,and &lt;code&gt;$\lambda$&lt;/code&gt; is called eigenvalue of the
spectral problem \ref{sp1}.&lt;/p&gt;

&lt;p&gt;Our problem is to recover the potential &lt;code&gt;$q(x)$&lt;/code&gt; from scattering data,
which can be obtained from scattering experiments physically. In
general, take &lt;code&gt;$\lambda=-k^2$&lt;/code&gt;, the scattering data includes refection
data &lt;code&gt;$R(k)$&lt;/code&gt; and transmission data &lt;code&gt;$T(k)$&lt;/code&gt;,so that the solution to \ref{sp1}
satisfy: &lt;code&gt;$$\begin{aligned}
\psi(x,k) \rightarrow T(k)e^{-ikx}\,\,\, \text{as }x\rightarrow -\infty  \\
\psi(x,k) \rightarrow R(k)e^{ikx}\,\,\, \text{as }x\rightarrow \infty
\end{aligned}$$&lt;/code&gt;
 The inverse scattering method requires some boundary
conditions as &lt;code&gt;$x\rightarrow \pm\infty$&lt;/code&gt;,also since the equation \ref{sp1}
is second order, so the solutions form a 2-dimensional complex vector
space and hence if &lt;code&gt;$\varphi$&lt;/code&gt; is solution to \ref{sp1} so is
&lt;code&gt;$\bar{\varphi}$&lt;/code&gt;, the complex conjugate, and they are linear independent.
Consider two bases of this complex vector space
&lt;code&gt;$(\varphi(x,k),\bar{\varphi}(x,k)),(\psi(x,k),\bar\psi(x,k))$&lt;/code&gt; which are
determined by: &lt;code&gt;$$\begin{aligned}
\varphi(x,k)\sim e^{-ikx}&amp;amp;,x\rightarrow -\infty \\
\bar\varphi(x,k)\sim e^{ikx}&amp;amp;,x\rightarrow -\infty \\
\psi(x,k)\sim e^{-ikx}&amp;amp;,x\rightarrow \infty\\
\bar\psi(x,k)\sim e^{ikx}&amp;amp;,x\rightarrow \infty
\end{aligned}$$&lt;/code&gt; And we can represent
&lt;code&gt;$\varphi(x,k)=a(k)\psi(x,k)+b(k)\bar\psi(x,k)$&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;appendix&#34;&gt;Appendix&lt;/h1&gt;

&lt;h2 id=&#34;sturm-liouville-eigenvalue-problem&#34;&gt;Sturm-Liouville eigenvalue problem&lt;/h2&gt;

&lt;p&gt;Let &lt;code&gt;$p(x)&amp;gt;0,q(x)\geq 0,r(x)\geq 0$&lt;/code&gt; in &lt;code&gt;$I=(a,b),b&amp;gt;a$&lt;/code&gt;, and let
&lt;code&gt;$u(x)\in C^2(I)\cap C^1(\bar{I})$&lt;/code&gt; then the equations below:
&lt;code&gt;$$\begin{aligned}
Lu(x)&amp;amp;=-\lambda r(x)u(x) \label{slevp}\\
u(a)&amp;amp;=h_0u&#39;(a)\\
u(b)&amp;amp;=h_1u&#39;(b)\end{aligned}$$&lt;/code&gt; where
&lt;code&gt;$L:={\frac{\text{d}^{} }{\text{d} x}}p(x){\frac{\text{d}^{} }{\text{d} x}}-q(x)$&lt;/code&gt;and &lt;code&gt;$h_0,h_1$&lt;/code&gt; are constants. We called this problem as Sturm-Liouville
EigenValue Problem (&lt;strong&gt;SLEVP&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;$L$&lt;/code&gt; is self-adjoint, i.e &lt;code&gt;$L=L^*$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Also we consider following problem which is called Sturm-Liouville
Boundary Value problem(&lt;strong&gt;SLBVP&lt;/strong&gt;) by changing SLEVP to
&lt;code&gt;$$\label{slbvp}\tag{6}
Lu(x)=f(x)$$&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;using-green-s-function-to-solve-some-reduced-slevp&#34;&gt;Using Green’s function to solve some reduced SLEVP&lt;/h2&gt;

&lt;p&gt;In this section, we will consider a type of SLEVP with the form of
\ref{slbvp}.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;$G(x,a)$&lt;/code&gt; solves &lt;code&gt;$L_xG(x,a)=\delta(x-a)$&lt;/code&gt;,then the solution to equation
\ref{slbvp} has the form: &lt;code&gt;$$\label{slbvpsol}
u(x)=u_0(x)+\int_{a}^{b}G(x,a)f(a)\text{d}a$$&lt;/code&gt; where &lt;code&gt;$u_0(x)$&lt;/code&gt; solve the
homogeneous equation &lt;code&gt;$Lu(x)=0$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We only need to verify \ref{slbvp}, hence &lt;code&gt;$$\begin{aligned}
Lu(x)&amp;amp;=L\big(u_0+\int_a^bG(x,a)f(a)\text{d}a\big)\\
&amp;amp;=0+\int_a^bf(a)L_xG(x,a)\text{d}a\\
&amp;amp;=\int_a^bf(a)\delta(x-a)\text{d}a\\
&amp;amp;=f(x)\end{aligned}$$&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;an-application-of-green-s-function&#34;&gt;An Application of Green’s function&lt;/h2&gt;

&lt;p&gt;Represent the following differential equation as integral equation:
&lt;code&gt;$$\label{se}\tag{7}
m_{xx}(x)-2kim_x(x)=-p(x)m(x)$$&lt;/code&gt; Also in order to get uniqueness, one
boundary value is prescribed: &lt;code&gt;$$\label{boundarycondition}\tag{8}
m\rightarrow 1,x\rightarrow -\infty$$&lt;/code&gt; Then apply the Green’s function
method, we represent \ref{se} as: &lt;code&gt;$$\label{integraleq}\tag{9}
m(x)=c_1+c_2e^{2kix}+\int_{-\infty}^{\infty}G(x-a)p(a)m(a)\text{d}a$$&lt;/code&gt;
where &lt;code&gt;$G(x-a)$&lt;/code&gt; solves the following differential equation:
&lt;code&gt;$$G_{xx}-2kiG_x=-\delta(x-a)$$&lt;/code&gt;and in \ref{integraleq}, &lt;code&gt;$c_1+c_2e^{2ki}$&lt;/code&gt;
means the general solution of &lt;code&gt;$$G_{xx}-2kiG_x=0$$&lt;/code&gt; which is the
corresponding homogeneous equation of \ref{se}.&lt;/p&gt;

&lt;p&gt;Moreover, applying the boundary condition \ref{boundarycondition}, we
obtain that &lt;code&gt;$c_1=1,c_2=0$&lt;/code&gt;, if &lt;code&gt;$\text{Im }k&amp;gt;0$&lt;/code&gt;. Since &lt;code&gt;$m\rightarrow 1$&lt;/code&gt; as
&lt;code&gt;$x\rightarrow -\infty$&lt;/code&gt;, &lt;code&gt;$c_2e^{-2kix}$&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
